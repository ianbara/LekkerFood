@model LekkerFood.Models.RecipeIngredient

@{
    ViewBag.Title = "Create";
    Layout = null;
}

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@Html.DisplayFor(model => model.Recipe.Name)
<hr />
@using (Ajax.BeginForm("CreateRecipeIngredient", "RecipeIngredient", new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "ingredient-list", OnSuccess = "success" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.RecipeId)

    <div class="form-inline">
        <div class="row">
            <div class="form-group col-lg-1">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="form-group col-lg-2">
                <label class="control-label" for="MeasurementTypeId">Measurement</label>
            </div>
            <div class="form-group col-lg-2">
                <label class="control-label" for="IngredientId">Ingredient</label>
            </div>
         
            <div class="form-group col-lg-2">
                <label class="control-label" for="PreparationTypeId">Preparation Method</label>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-lg-1">
                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-lg-2">
                @Html.DropDownListFor(m => m.MeasurementTypeId, new SelectList(ViewBag.MeasurementTypes, "Id", "Name"), "---- Select Recipe ----", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MeasurementTypeId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group col-lg-2">
                @Html.DropDownListFor(m => m.IngredientId, new SelectList(ViewBag.Ingredients, "Id", "Name"), "---- Select Recipe ----", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IngredientId, "", new { @class = "text-danger" })
            </div>
            
            <div class="form-group col-lg-2">
                @Html.DropDownListFor(m => m.PreparationTypeId, new SelectList(ViewBag.PreparationTypes, "Id", "Name"), "---- Select Recipe ----", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PreparationTypeId, "", new { @class = "text-danger" })
            </div>
            <button type="submit" class="btn btn-default">Add</button>
        </div>

    </div>

    <hr />

    <div class="row">
        <div class="form-group col-lg-6">
            <label class="control-label" for="QuantityDetails">Quantity Details</label>
            @Html.EditorFor(model => model.QuantityDetails, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantityDetails, "", new { @class = "text-danger" })
        </div>


    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function success(result) {
            alert('success');
            //if (result.redirectUrl) {
            //    window.location.href = result.redirectUrl;
            //}
        }
    </script>
}
